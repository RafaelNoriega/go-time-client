schema{
    query: Query
    mutation:Mutation
}

type Query{
    getEmployee(pk: STRING!, sk: STRING!): Employee! 
}

type Mutation {

}

type Organization {
    pk: ID!
    sk: STRING!
    name: STRING
    costCenters: AWSJSON
    jobs: AWSJSON
    hourlyWage: FLOAT
    crewList: AWSJSON
}

type User @model 
@key(name: “Username”, fields: [“username”], queryField: “getByUsername){
    pk: ID!
    sk: STRING!
    username: STRING!
    password: STRING!
    firstName: STRING
    lastName:	STRING 
    email: STRING
    crewList: AWSJSON
    crewId: STRING
    role: STRING
    access: AWSJSON
}

type Grower {
    pk: ID!
    sk: STRING!
    name: STRING
    ranchList: AWSJSON
}

type Employee {
    pk: ID!
    sk: STRING!
    firstName: STRING
    middleName: STRING
    lastName: STRING	
    crewId: STRING
    employeeId: STRING
    active: BOOLEAN
    position: STRING
    email: AWSEmail
    ssn: STRING
    address: AWSJSON
    phone: AWSPhone
    h2aFlag: BOOLEAN
}

type Crew {
    pk: ID!
    sk: STRING!
    name: STRING!
    costCenters: AWSJSON
    hourlyWage: FLOAT
}

type TimeCard {
    pk: ID!
    sk: STRING!
    breakTime: FLOAT
    CostCenter: STRING
    date: AWSDate
    exported: BOOLEAN
    firstName: STRING
    middleName: STRING
    lastName: STRING
    flatRate: FLOAT
    hours: FLOAT
    hourlyWage: FLOAT
    piecesOnly: BOOLEAN
    pieces1: INT	
    pieces2: INT	
    pieces3: INT	
    rate1: FLOAT	
    rate2: FLOAT	
    rate3: FLOAT	
    position: STRING	
    table: STRING
    TTL: AWSTimestamp
}
